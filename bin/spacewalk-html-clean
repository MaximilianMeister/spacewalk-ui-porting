#!/usr/bin/env ruby
require 'diffy'
require 'logger'
require 'csv'

jardir = File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))
bindir = File.expand_path(File.join(File.dirname(__FILE__), '..', 'bin'))
require File.join(jardir, 'jericho-html-3.3.jar')

import 'net.htmlparser.jericho.Source'
import 'net.htmlparser.jericho.OutputDocument'
import 'net.htmlparser.jericho.Attributes'

# Jericho needs an object implementing the
# interface
# http://jericho.htmlparser.net/docs/javadoc/net/htmlparser/jericho/Logger.html
# we create an adapter for the ruby logger
class JerichoLoggerAdapter
  def initialize(logger)
    @logger = logger
  end
  def isErrorEnabled() @logger.error? end
  def isDebugEnabled() @logger.debug? end
  def isInfoEnabled() @logger.info? end
  def isWarnEnabled() @logger.warn? end

  def method_missing(name, *args)
    @logger.send(name, *args)
  end
end

# read csv into hash like {'/img/rhn-icon-user.gif' => {:newicon => 'icon-user', :color => 'default'}, ... }
imglist = File.join(bindir, 'imglist')
csv_options = {:headers => true, :header_converters => :symbol, :converters => :all}
hashes = {}

CSV.foreach(imglist, csv_options) do |line|
	hashes[line.fields[0]] = Hash[line.headers[1..-1].zip(line.fields[1..-1])]
end

def translate_images(out, tag, list)
  list.each do |key, hash|
    src = tag.getAttributeValue('src')
    if key == src
	  unless hash[:color] == 'default'
        out.replace(tag, %Q{<i class="#{hash[:newicon]} #{hash[:color]}"></i>}) unless hash[:newicon].nil?
	  else
	    out.replace(tag, %Q{<i class="#{hash[:newicon]}"></i>}) unless hash[:newicon].nil?
	  end
    end
  end
end

def clean_tables(out, tag)
  tag.getAttributes.each do |attr|
    if ['cellpadding', 'cellspacing', 'width'].include?(attr.name)
      out.remove(attr)
    end
  end
end

def transform_toolbar_image(out, tag, list)
  list.each do |key, hash|
    src = tag.getAttributeValue('img')
    if key == src
      img = tag.getAttributes.get('img')
      out.replace(img, %Q{icon="#{hash[:newicon]}"}) unless hash[:newicon].nil?
    end
  end
end

logger = Logger.new("/dev/null")
logger.level = Logger::WARN

Dir.glob('./**/*.{jsp,jspf}').each do |path|
  content = File.read(path)
  source = Source.new(content)
  source.setLogger(JerichoLoggerAdapter.new(logger))
  out = OutputDocument.new(source)

  tags = source.getAllStartTags
  tags.each do |tag|
    #clean_tables(out, tag) if tag.name == 'table'
    translate_images(out, tag, hashes) if tag.name == 'img'
	#transform_toolbar_image(out, tag, hashes) if tag.name == 'rhn:toolbar'
  end

  begin
    diff = Diffy::Diff.new(content, out.toString, :include_diff_info => true)
    puts diff.to_s(:color)
  rescue
    STDERR.puts "Failed diff for #{path}"
  end
end
